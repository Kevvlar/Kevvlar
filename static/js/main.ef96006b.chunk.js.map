{"version":3,"sources":["redux/left-side-nav/leftSideNavTypes.js","redux/left-side-nav/leftSideNavReducer.js","redux/right-side-nav/rightSideNavTypes.js","redux/right-side-nav/rightSideNavReducer.js","redux/modal/modalTypes.js","redux/modal/modalReducer.js","redux/board/boardTypes.js","redux/board/boardReducer.js","redux/column-order/columnOrderTypes.js","redux/column-order/columnOrderReducer.js","redux/column/columnTypes.js","redux/column/columnReducer.js","redux/card/cardTypes.js","redux/card/cardReducer.js","redux/rootReducer.js","redux/store.js","components/navbar/NavBar.jsx","components/get-started-button/GetStartedButton.jsx","components/greeting/Greeting.jsx","components/video/Video.jsx","components/why-section/Why.jsx","components/image-section/ImageSection.jsx","components/directory/Directory.jsx","pages/homePage/HomePage.jsx","redux/left-side-nav/leftSideNavActions.js","redux/modal/modalActions.js","redux/board/boardActions.js","redux/column-order/columnOrderActions.js","redux/column/columnActions.js","redux/card/cardActions.js","components/notification-icon/NotificationIcon.jsx","redux/right-side-nav/rightSideNavActions.js","components/profile-image/ProfileImage.jsx","components/appbar/AppBar.jsx","components/sidenav-left-header/sidenav-left-header.component.jsx","components/board-item/BoardItem.jsx","components/board-list/BoardList.jsx","components/sidenav-left/SideNavLeft.jsx","components/task/Task.jsx","components/task-list/TaskList.jsx","components/sidenav-right/SideNavRight.jsx","components/card/Card.jsx","components/column/Column.jsx","components/column-holder/ColumnHolder.jsx","components/modal/board-modal/BoardModal.jsx","components/modal/column-modal/ColumnModal.jsx","components/modal/card-modal/CardModal.jsx","components/modal/Modal.jsx","assets/svg/iconlibrary.js","components/board-nav-bar/BoardNavBar.jsx","pages/mainPage/MainPage.jsx","components/auth/index.js","components/signup/SignUp.jsx","components/signin/SignIn.jsx","components/auth/PrivateRoute.jsx","components/auth/RedirectToMainPage.jsx","App.js","index.js"],"names":["SHOW_LEFT_SIDE_NAV","HIDE_LEFT_SIDE_NAV","initialState","leftSideNav","leftSideNavReducer","state","action","type","TOGGLE_RIGHT_SIDE_NAV","TOGGLE_FLAT_CARD","TOGGLE_GRID_CARD","rightSideNav","isGrid","rightSideNavReducer","CLOSE_MODAL","BOARD_MODAL","COLUMN_MODAL","CARD_MODAL","ADD","EDIT","DELETE","showModal","modalType","modalActionType","modalReducer","payLoad","ADD_BOARD_REQUEST","ADD_BOARD_SUCCESS","ADD_BOARD_FAILURE","EDIT_BOARD_REQUEST","EDIT_BOARD_SUCCESS","EDIT_BOARD_FAILURE","DELETE_BOARD_REQUEST","DELETE_BOARD_SUCCESS","DELETE_BOARD_FAILURE","FETCH_BOARD_REQUEST","FETCH_BOARD_SUCCESS","FETCH_BOARD_FAILURE","BOARD_API_URL","SET_CURRENT_BOARD_ID_AND_TITLE","currentBoardId","currentBoardTitle","loading","error","boards","boardReducer","id","title","FETCH_COLUMN_ORDER_REQUEST","FETCH_COLUMN_ORDER_SUCCESS","FETCH_COLUMN_ORDER_FAILURE","UPDATE_COLUMN_ORDER_REQUEST","UPDATE_COLUMN_ORDER_SUCCESS","UPDATE_COLUMN_ORDER_FAILURE","COLUMN_ORDER_API_URL","UPDATE_COLUMN_ORDER_LOCAL","order","columnOrderReducer","FETCH_COLUMNS_REQUEST","FETCH_COLUMNS_SUCCESS","FETCH_COLUMNS_FAILURE","ADD_COLUMN_REQUEST","ADD_COLUMN_SUCCESS","ADD_COLUMN_FAILURE","EMPTY_COLUMNS","UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST","UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS","UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE","UPDATE_CARD_ORDER_AND_COLUMN_REQUEST","UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS","UPDATE_CARD_ORDER_AND_COLUMN_FAILURE","SET_CURRENT_COLUMN_ID_AND_TITLE","COLUMN_API_URL","DELETE_COLUMN_BY_BOARD","currentColumnId","currentColumnTitle","columns","columnReducer","ADD_CARD_REQUEST","ADD_CARD_SUCCESS","ADD_CARD_FAILURE","EDIT_CARD_REQUEST","EDIT_CARD_SUCCESS","EDIT_CARD_FAILURE","DELETE_CARD_REQUEST","DELETE_CARD_SUCCESS","DELETE_CARD_FAILURE","CARD_API_URL","SET_CARD_DATA","currentCardId","description","date","color","cardReducer","rootReducer","combineReducers","sideNavLeft","sideNavRight","modal","board","columnOrder","column","card","store","createStore","composeWithDevTools","applyMiddleware","thunk","NavBar","menuItem","className","to","GetStartedButton","Greeting","useState","showPricing","setShowPricing","onClick","style","Video","controls","loop","src","Why","Imagesection","width","alt","borderRadius","Directory","HomePage","showLeftSideNav","closeModal","setBoardModal","actionType","setColumnModal","setCardModal","addNewBoardSuccess","setCurrentBoardIdAndTitle","data","addBoard","dispatch","axios","post","headers","Authorization","localStorage","getItem","then","response","_id","fetchBoards","fetchColumns","fetchColumnOrder","catch","errorMsg","message","addNewBoardFailure","editBoard","boardId","patch","editBoardFailure","deleteBoard","delete","deleteColumnByBoard","deleteBoardFailure","get","firstBoard","fetchBoardsSuccess","fetchBoardsFailure","params","fetchColumnOrderFailure","updateColumnOrder","newOrder","updateColumnOrderFailure","emptyColumns","fetchColumnSuccess","fetchColumnFailure","addColumn","addNewColumnFailure","updateCardOrderWithinColumn","columnId","updateCardOrderWithinColumnFailure","updateCardOrderAndColumn","sourceColumnId","addCard","addCardFailure","editCard","cardId","editCardFailure","deleteCard","deleteCardFailure","connect","toggleRightSideNav","UserProfile","boardTitle","toggleLeftSideNav","height","viewBox","fill","xmlns","d","x","y","transform","unToogleSideNav","editBoardModal","deleteBoardModal","setBoardIdAndTitle","boardsList","addNewBoardModal","dataLength","length","hasMore","map","index","isLoading","TaskItem","TaskList","Task","toggleGrid","toggleFlat","withRouter","history","removeItem","push","editCardModal","setCurrentCardData","setCardData","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","moment","format","colorLabel","addNewCardModal","editColumnModal","deleteColumnModal","setColumnIdAndTitle","setCurrentColumnIdAndTitle","droppableId","droppableProps","array","cards","cardOrder","key","sort","a","b","A","B","indexOf","placeholder","addNewColumnModal","updateOrderLocal","updateCardOrderInColumn","updateCardOrderAndColumnForeign","vertical","horizontal","onDragEnd","result","destination","source","newColumnOrder","Array","from","splice","reOrderedItem","currentColumn","find","newCardOrder","reOrderedCards","targetColumnCardOrder","newTargetColumnCardOrder","destinationColumnId","direction","AddBoard","boardName","setBoardName","name","value","onChange","e","target","body","EditBoard","toString","editBoardName","setEditBoardName","DeleteBoard","createColumn","deleteCurrentColumn","deleteColumnFailure","deleteColumn","updateColumn","editColumnFailure","editColumn","AddColumn","columnTitle","setColumnTitle","EditColumn","columnEditTitle","setColumnEditTitle","DeleteColumn","cardTitle","cardDescription","cardDate","cardColor","addNewCard","removeCard","updateCard","AddCardModal","setCardTitle","cardBody","setCardBody","setCardDate","setCardColor","maxLength","EditBoardModal","editCardTitle","setEditCardTitle","editCardBody","setEditCardBody","editCardDate","setEditCardDate","editCardColor","setEditCardColor","LockIcon","BoardIcon","TeamIcon","AddUserIcon","cx","cy","r","MainPage","this","props","React","Component","authenticate","next","window","setItem","isAuthenticated","setName","email","setEmail","password","setPassword","setIsLoading","errorMessage","setErrorMessage","onSubmit","event","preventDefault","token","required","PrivateRoute","component","rest","render","pathname","location","RedirectToMainPage","App","exact","path","Homepage","SignUp","SignIn","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef96006b.chunk.js","sourcesContent":["export const SHOW_LEFT_SIDE_NAV = \"SHOW_LEFT_SIDE_NAV\";\r\nexport const HIDE_LEFT_SIDE_NAV = \"HIDE_LEFT_SIDE_NAV\";\r\n","import { SHOW_LEFT_SIDE_NAV, HIDE_LEFT_SIDE_NAV } from \"./leftSideNavTypes\";\r\n\r\nconst initialState = {\r\n  leftSideNav: false,\r\n};\r\n\r\nconst leftSideNavReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LEFT_SIDE_NAV:\r\n      return {\r\n        ...state,\r\n        leftSideNav: true,\r\n      };\r\n    case HIDE_LEFT_SIDE_NAV:\r\n      return {\r\n        ...state,\r\n        leftSideNav: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default leftSideNavReducer;\r\n","export const TOGGLE_RIGHT_SIDE_NAV = \"TOGGLE_RIGHT_SIDE_NAV\";\r\nexport const TOGGLE_FLAT_CARD = \"TOGGLE_FLAT_CARD\";\r\nexport const TOGGLE_GRID_CARD = \"TOGGLE_GRID_CARD\";\r\n","import {\r\n  TOGGLE_RIGHT_SIDE_NAV,\r\n  TOGGLE_GRID_CARD,\r\n  TOGGLE_FLAT_CARD,\r\n} from \"./rightSideNavTypes\";\r\n\r\nconst initialState = {\r\n  rightSideNav: false,\r\n  isGrid: true,\r\n};\r\n\r\nconst rightSideNavReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_RIGHT_SIDE_NAV:\r\n      return {\r\n        ...state,\r\n        rightSideNav: state.rightSideNav === false ? true : false,\r\n      };\r\n    case TOGGLE_FLAT_CARD:\r\n      return {\r\n        ...state,\r\n        isGrid: false,\r\n        rightSideNav: true,\r\n      };\r\n    case TOGGLE_GRID_CARD:\r\n      return {\r\n        ...state,\r\n        isGrid: true,\r\n        rightSideNav: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rightSideNavReducer;\r\n","export const CLOSE_MODAL = \"CLOSE_MODAL\";\r\nexport const BOARD_MODAL = \"BOARD_MODAL\";\r\nexport const COLUMN_MODAL = \"COLUMN_MODAL\";\r\nexport const CARD_MODAL = \"CARD\";\r\nexport const ADD = \"ADD\";\r\nexport const EDIT = \"EDIT\";\r\nexport const DELETE = \"DELETE\";\r\n","import {\r\n  CLOSE_MODAL,\r\n  BOARD_MODAL,\r\n  COLUMN_MODAL,\r\n  CARD_MODAL,\r\n} from \"./modalTypes\";\r\n\r\nconst initialState = {\r\n  showModal: false,\r\n  modalType: \"\",\r\n  modalActionType: \"\",\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case BOARD_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: true,\r\n        modalType: BOARD_MODAL,\r\n        modalActionType: action.payLoad,\r\n      };\r\n\r\n    case COLUMN_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: true,\r\n        modalType: COLUMN_MODAL,\r\n        modalActionType: action.payLoad,\r\n      };\r\n\r\n    case CARD_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: true,\r\n        modalType: CARD_MODAL,\r\n        modalActionType: action.payLoad,\r\n      };\r\n\r\n    case CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: false,\r\n        modalType: \"\",\r\n        modalActionType: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","// Boards types\r\nexport const ADD_BOARD_REQUEST = \"ADD_BOARD_REQUEST\";\r\nexport const ADD_BOARD_SUCCESS = \"ADD_BOARD_SUCCESS\";\r\nexport const ADD_BOARD_FAILURE = \"ADD_BOARD_FAILURE\";\r\n\r\nexport const EDIT_BOARD_REQUEST = \"EDIT_BOARD_REQUEST\";\r\nexport const EDIT_BOARD_SUCCESS = \"EDIT_BOARD_SUCCESS\";\r\nexport const EDIT_BOARD_FAILURE = \"EDIT_BOARD_FAILURE\";\r\n\r\nexport const DELETE_BOARD_REQUEST = \"DELETE_BOARD_REQUEST\";\r\nexport const DELETE_BOARD_SUCCESS = \"DELETE_BOARD_SUCCESS\";\r\nexport const DELETE_BOARD_FAILURE = \"DELETE_BOARD_FAILURE\";\r\n\r\nexport const FETCH_BOARD_REQUEST = \"FETCH_BOARD_REQUEST\";\r\nexport const FETCH_BOARD_SUCCESS = \"FETCH_BOARD_SUCCESS\";\r\nexport const FETCH_BOARD_FAILURE = \"FETCH_BOARD_FAILURE\";\r\n\r\nexport const BOARD_API_URL =\r\n  \"https://intense-garden-79464.herokuapp.com/api/v1/boards\";\r\nexport const SET_CURRENT_BOARD_ID_AND_TITLE = \"SET_CURRENT_BOARD_ID_AND_TITLE\";\r\n","import {\r\n  FETCH_BOARD_REQUEST,\r\n  FETCH_BOARD_SUCCESS,\r\n  FETCH_BOARD_FAILURE,\r\n  ADD_BOARD_REQUEST,\r\n  ADD_BOARD_SUCCESS,\r\n  ADD_BOARD_FAILURE,\r\n  EDIT_BOARD_REQUEST,\r\n  EDIT_BOARD_SUCCESS,\r\n  EDIT_BOARD_FAILURE,\r\n  DELETE_BOARD_REQUEST,\r\n  DELETE_BOARD_SUCCESS,\r\n  DELETE_BOARD_FAILURE,\r\n  SET_CURRENT_BOARD_ID_AND_TITLE,\r\n} from \"./boardTypes\";\r\n\r\nconst initialState = {\r\n  currentBoardId: \"\",\r\n  currentBoardTitle: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  boards: [],\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case FETCH_BOARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        boards: action.payLoad,\r\n      };\r\n\r\n    case FETCH_BOARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        boards: [],\r\n        error: action.payLoad,\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n      };\r\n\r\n    case SET_CURRENT_BOARD_ID_AND_TITLE:\r\n      return {\r\n        ...state,\r\n        currentBoardId: action.payLoad.id,\r\n        currentBoardTitle: action.payLoad.title,\r\n      };\r\n\r\n    case ADD_BOARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ADD_BOARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_BOARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        boards: [],\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n        error: action.payLoad,\r\n      };\r\n\r\n    case EDIT_BOARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case EDIT_BOARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n      };\r\n\r\n    case EDIT_BOARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        boards: [],\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n        error: action.payLoad,\r\n      };\r\n\r\n    case DELETE_BOARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case DELETE_BOARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n      };\r\n\r\n    case DELETE_BOARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        boards: [],\r\n        currentBoardId: \"\",\r\n        currentBoardTitle: \"\",\r\n        error: action.payLoad,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","export const FETCH_COLUMN_ORDER_REQUEST = \"FETCH_COLUMN_ORDER_REQUEST\";\r\nexport const FETCH_COLUMN_ORDER_SUCCESS = \"FETCH_COLUMN_ORDER_SUCCESS\";\r\nexport const FETCH_COLUMN_ORDER_FAILURE = \"FETCH_COLUMN_ORDER_FAILURE\";\r\n\r\nexport const UPDATE_COLUMN_ORDER_REQUEST = \"UPDATE_COLUMN_ORDER_REQUEST\";\r\nexport const UPDATE_COLUMN_ORDER_SUCCESS = \"UPDATE_COLUMN_ORDER_SUCCESS\";\r\nexport const UPDATE_COLUMN_ORDER_FAILURE = \"UPDATE_COLUMN_ORDER_FAILURE\";\r\n\r\nexport const COLUMN_ORDER_API_URL =\r\n  \"https://intense-garden-79464.herokuapp.com/api/v1/columnorder\";\r\nexport const UPDATE_COLUMN_ORDER_LOCAL = \"UPDATE_COLUMN_ORDER_LOCAL\";\r\n","import {\r\n  FETCH_COLUMN_ORDER_REQUEST,\r\n  FETCH_COLUMN_ORDER_SUCCESS,\r\n  FETCH_COLUMN_ORDER_FAILURE,\r\n  UPDATE_COLUMN_ORDER_REQUEST,\r\n  UPDATE_COLUMN_ORDER_SUCCESS,\r\n  UPDATE_COLUMN_ORDER_FAILURE,\r\n  UPDATE_COLUMN_ORDER_LOCAL,\r\n} from \"./columnOrderTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n  order: [],\r\n};\r\n\r\nexport const columnOrderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COLUMN_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_COLUMN_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: action.payLoad,\r\n      };\r\n\r\n    case FETCH_COLUMN_ORDER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: [],\r\n        error: action.payLoad,\r\n      };\r\n\r\n    case UPDATE_COLUMN_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_COLUMN_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_COLUMN_ORDER_LOCAL: {\r\n      return {\r\n        ...state,\r\n        order: action.payLoad,\r\n      };\r\n    }\r\n\r\n    case UPDATE_COLUMN_ORDER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: [],\r\n        error: action.payLoad,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default columnOrderReducer;\r\n","export const FETCH_COLUMNS_REQUEST = \"FETCH_COLUMNS_REQUEST\";\r\nexport const FETCH_COLUMNS_SUCCESS = \"FETCH_COLUMNS_SUCCESS\";\r\nexport const FETCH_COLUMNS_FAILURE = \"FETCH_COLUMNS_FAILURE\";\r\n\r\nexport const ADD_COLUMN_REQUEST = \"ADD_COLUMN_REQUEST\";\r\nexport const ADD_COLUMN_SUCCESS = \"ADD_COLUMN_SUCCESS\";\r\nexport const ADD_COLUMN_FAILURE = \"ADD_COLUMN_FAILURE\";\r\n\r\nexport const EDIT_COLUMN_REQUEST = \"EDIT_COLUMN_REQUEST\";\r\nexport const EDIT_COLUMN_SUCCESS = \"EDIT_COLUMN_SUCCESS\";\r\nexport const EDIT_COLUMN_FAILURE = \"EDIT_COLUMN_FAILURE\";\r\n\r\nexport const DELETE_COLUMN_REQUEST = \"DELETE_COLUMN_REQUEST\";\r\nexport const DELETE_COLUMN_SUCCESS = \"DELETE_COLUMN_SUCCESS\";\r\nexport const DELETE_COLUMN_FAILURE = \"DELETE_COLUMN_FAILURE\";\r\n\r\nexport const EMPTY_COLUMNS = \"EMPTY_COLUMNS\";\r\n\r\nexport const UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST =\r\n  \"UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST\";\r\nexport const UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS =\r\n  \"UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS\";\r\nexport const UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE =\r\n  \"UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE\";\r\n\r\nexport const UPDATE_CARD_ORDER_AND_COLUMN_REQUEST =\r\n  \"UPDATE_CARD_ORDER_AND_COLUMN_REQUEST\";\r\nexport const UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS =\r\n  \"UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS\";\r\nexport const UPDATE_CARD_ORDER_AND_COLUMN_FAILURE =\r\n  \"UPDATE_CARD_ORDER_AND_COLUMN_FAILURE\";\r\n\r\nexport const SET_CURRENT_COLUMN_ID_AND_TITLE =\r\n  \"SET_CURRENT_COLUMN_ID_AND_TITLE\";\r\n\r\nexport const COLUMN_API_URL =\r\n  \"https://intense-garden-79464.herokuapp.com/api/v1/columns\";\r\nexport const DELETE_COLUMN_BY_BOARD = \"DELETE_COLUMN_BY_BOARD\";\r\n","import {\r\n  ADD_COLUMN_REQUEST,\r\n  ADD_COLUMN_SUCCESS,\r\n  ADD_COLUMN_FAILURE,\r\n  FETCH_COLUMNS_REQUEST,\r\n  FETCH_COLUMNS_SUCCESS,\r\n  FETCH_COLUMNS_FAILURE,\r\n  SET_CURRENT_COLUMN_ID_AND_TITLE,\r\n  DELETE_COLUMN_BY_BOARD,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_REQUEST,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_FAILURE,\r\n  EMPTY_COLUMNS,\r\n} from \"./columnTypes\";\r\n\r\nconst initialState = {\r\n  currentColumnId: \"\",\r\n  currentColumnTitle: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  columns: [],\r\n};\r\n\r\nconst columnReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COLUMN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case ADD_COLUMN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case ADD_COLUMN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case FETCH_COLUMNS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case FETCH_COLUMNS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        columns: action.payLoad,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case FETCH_COLUMNS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n      };\r\n\r\n    case EMPTY_COLUMNS:\r\n      return {\r\n        ...state,\r\n        columns: [],\r\n      };\r\n\r\n    case SET_CURRENT_COLUMN_ID_AND_TITLE:\r\n      return {\r\n        ...state,\r\n        currentColumnId: action.payLoad.id,\r\n        currentColumnTitle: action.payLoad.title,\r\n      };\r\n\r\n    case DELETE_COLUMN_BY_BOARD:\r\n      return {\r\n        ...state,\r\n        currentColumnId: \"\",\r\n        currentColumnTitle: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        columns: [],\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        columns: [],\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_AND_COLUMN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        columns: [],\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_CARD_ORDER_AND_COLUMN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default columnReducer;\r\n","export const ADD_CARD_REQUEST = \"ADD_CARD_REQUEST\";\r\nexport const ADD_CARD_SUCCESS = \"ADD_CARD_SUCCESS\";\r\nexport const ADD_CARD_FAILURE = \"ADD_CARD_FAILURE\";\r\n\r\nexport const EDIT_CARD_REQUEST = \"EDIT_CARD_REQUEST\";\r\nexport const EDIT_CARD_SUCCESS = \"EDIT_CARD_SUCCESS\";\r\nexport const EDIT_CARD_FAILURE = \"EDIT_CARD_FAILURE\";\r\n\r\nexport const DELETE_CARD_REQUEST = \"DELETE_CARD_REQUEST\";\r\nexport const DELETE_CARD_SUCCESS = \"DELETE_CARD_SUCCESS\";\r\nexport const DELETE_CARD_FAILURE = \"DELETE_CARD_FAILURE\";\r\n\r\nexport const CARD_API_URL =\r\n  \"https://intense-garden-79464.herokuapp.com/api/v1/cards\";\r\nexport const SET_CARD_DATA = \"SET_CARD_DATA\";\r\n","import {\r\n  ADD_CARD_REQUEST,\r\n  ADD_CARD_SUCCESS,\r\n  ADD_CARD_FAILURE,\r\n  EDIT_CARD_REQUEST,\r\n  EDIT_CARD_SUCCESS,\r\n  EDIT_CARD_FAILURE,\r\n  DELETE_CARD_REQUEST,\r\n  DELETE_CARD_SUCCESS,\r\n  DELETE_CARD_FAILURE,\r\n  SET_CARD_DATA,\r\n} from \"./cardTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n  currentCardId: \"\",\r\n  title: \"\",\r\n  description: \"\",\r\n  date: \"\",\r\n  color: \"\",\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ADD_CARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_CARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case EDIT_CARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: \"\",\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case EDIT_CARD_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: \"\",\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case EDIT_CARD_FAILURE:\r\n      return {\r\n        loading: false,\r\n        error: action.payLoad,\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case DELETE_CARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case DELETE_CARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case DELETE_CARD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payLoad,\r\n        currentCardId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        color: \"\",\r\n      };\r\n\r\n    case SET_CARD_DATA:\r\n      return {\r\n        ...state,\r\n        currentCardId: action.payLoad.id,\r\n        title: action.payLoad.title,\r\n        description: action.payLoad.description,\r\n        date: action.payLoad.date,\r\n        color: action.payLoad.color,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport leftSideNavReducer from \"./left-side-nav/leftSideNavReducer\";\r\nimport rightSideNavReducer from \"./right-side-nav/rightSideNavReducer\";\r\nimport modalReducer from \"./modal/modalReducer\";\r\nimport boardReducer from \"./board/boardReducer\";\r\nimport columnOrderReducer from \"./column-order/columnOrderReducer\";\r\nimport columnReducer from \"./column/columnReducer\";\r\nimport cardReducer from \"./card/cardReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  sideNavLeft: leftSideNavReducer,\r\n  sideNavRight: rightSideNavReducer,\r\n  modal: modalReducer,\r\n  board: boardReducer,\r\n  columnOrder: columnOrderReducer,\r\n  column: columnReducer,\r\n  card: cardReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n// import logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\n\r\nconst NavBar = ({ menuItem }) => (\r\n  <header>\r\n    <div className=\"navbar-container\">\r\n      <p className=\"navbar-logo primary-text-color\">KEVVLAR</p>\r\n      <Link className=\"navbar-button\" to=\"/signup\">\r\n        sign up\r\n      </Link>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./getStartedButton.css\";\r\n\r\nconst GetStartedButton = () => (\r\n  <Link to=\"/signin\" className=\"greeting-buttons-container\">\r\n    <button className=\"greeting-button-get-started\">Get Started</button>\r\n  </Link>\r\n);\r\n\r\nexport default GetStartedButton;\r\n","import React, { useState } from \"react\";\r\n\r\nimport GetStartedButon from \"../get-started-button/GetStartedButton\";\r\n\r\nimport \"./greeting.css\";\r\n\r\nfunction Greeting() {\r\n  const [showPricing, setShowPricing] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setShowPricing(true);\r\n  };\r\n\r\n  const handleShowPricing = () => (\r\n    <div className=\"donate-container\">\r\n      <p style={{ color: \"#2196f3\" }}>Free! But donations are appreciated.</p>{\" \"}\r\n      <button className=\"donatebutton\">Donate</button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"greeting-container section-margin\">\r\n      <h2 className=\"greeting-heading\">Simple. Fast. Clean.</h2>\r\n      <h5 className=\"greeting-main-text primary-text-color\">\r\n        Everyone could use some better organization, so we built an app just for\r\n        that. With dead-simple drag and drop functionality and color coded\r\n        notes, you will be sure to finish your work faster and never miss a\r\n        thing.\r\n      </h5>\r\n      <div className=\"greeting-buttons-container\">\r\n        <GetStartedButon />\r\n        <div onClick={handleClick} className=\"greeting-pricing-link\">\r\n          Pricing\r\n        </div>\r\n      </div>\r\n      {showPricing ? handleShowPricing() : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Greeting;\r\n","import React from \"react\";\r\n\r\nimport \"./video.css\";\r\n\r\nconst Video = () => (\r\n  <div className=\"video-container\">\r\n    <video\r\n      className=\"video-controller\"\r\n      controls=\"controls\"\r\n      loop=\"loop\"\r\n      src=\"https://www.kevvlar.com/static/media/prog.0f550ed.mp4\"\r\n      type=\"video/mp4\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Video;\r\n","import React from \"react\";\r\n\r\nimport GetStartedButton from \"../get-started-button/GetStartedButton\";\r\n\r\nimport \"./why.css\";\r\n\r\nfunction Why() {\r\n  return (\r\n    <div className=\"greeting-container padding-top section-margin\">\r\n      <h2 className=\"greeting-heading\">Why Us Instead of Other Apps?</h2>\r\n      <div className=\"segment-holder\">\r\n        <div className=\"segment-section-holder\">\r\n          <h3 className=\"segment-section-title\">Title number 1</h3>\r\n          <h5 className=\"greeting-main-text primary-text-color\">\r\n            Everyone could use some better organization, so we built an app just\r\n            for that.\r\n          </h5>\r\n        </div>\r\n        <div className=\"segment-section-holder\">\r\n          <h3 className=\"segment-section-title\">Title number 1</h3>\r\n          <h5 className=\"greeting-main-text primary-text-color\">\r\n            Everyone could use some better organization, so we built an app just\r\n            for that.\r\n          </h5>\r\n        </div>\r\n        <div className=\"segment-section-holder\">\r\n          <h3 className=\"segment-section-title\">Title number 1</h3>\r\n          <h5 className=\"greeting-main-text primary-text-color\">\r\n            Everyone could use some better organization, so we built an app just\r\n            for that.\r\n          </h5>\r\n        </div>\r\n      </div>\r\n      <GetStartedButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Why;\r\n","import React from \"react\";\r\n\r\nimport GetStartedButton from \"../get-started-button/GetStartedButton\";\r\n\r\nimport \"./imageSection.css\";\r\n\r\nfunction Imagesection() {\r\n  return (\r\n    <div className=\"greeting-container padding-top section-margin\">\r\n      <h2 className=\"greeting-heading\">Why Us Instead of Other Apps?</h2>\r\n      <div className=\"segment-holder\">\r\n        <div className=\"image-holder\">\r\n          <img\r\n            src=\"https://icons8.com/wp-content/uploads/2020/03/dashboard-design-1.png\"\r\n            width=\"400px\"\r\n            alt=\"\"\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n        </div>\r\n        <div className=\"image-section-holder\">\r\n          <h3 className=\"segment-section-title\">Title number 1</h3>\r\n          <h5 className=\"greeting-main-text primary-text-color\">\r\n            Everyone could use some better organization, so we built an app just\r\n            for that.\r\n          </h5>\r\n        </div>\r\n      </div>\r\n      <GetStartedButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Imagesection;\r\n","import React from \"react\";\r\n\r\nimport Greeting from \"../greeting/Greeting\";\r\nimport Video from \"../video/Video\";\r\nimport Why from \"../why-section/Why\";\r\nimport Imagesection from \"../image-section/ImageSection\";\r\n\r\nimport \"./directory.css\";\r\n\r\nconst Directory = () => (\r\n  <div className=\"directory-container\">\r\n    <Greeting />\r\n    <Video />\r\n    <Why />\r\n    <Imagesection />\r\n  </div>\r\n);\r\n\r\nexport default Directory;\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"../../components/navbar/NavBar\";\r\nimport Directory from \"../../components/directory/Directory\";\r\n\r\nimport \"./homePage.css\";\r\n\r\nconst HomePage = () => (\r\n  <div className=\"homepage\">\r\n    <NavBar />\r\n    <Directory />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import { SHOW_LEFT_SIDE_NAV, HIDE_LEFT_SIDE_NAV } from \"./leftSideNavTypes\";\r\n\r\nexport const showLeftSideNav = () => {\r\n  return {\r\n    type: SHOW_LEFT_SIDE_NAV,\r\n  };\r\n};\r\n\r\nexport const hideLeftSideNav = () => {\r\n  return {\r\n    type: HIDE_LEFT_SIDE_NAV,\r\n  };\r\n};\r\n","import {\r\n  CLOSE_MODAL,\r\n  BOARD_MODAL,\r\n  COLUMN_MODAL,\r\n  CARD_MODAL,\r\n  ADD,\r\n} from \"./modalTypes\";\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: CLOSE_MODAL,\r\n  };\r\n};\r\n\r\nexport const setBoardModal = (actionType = ADD) => {\r\n  return {\r\n    type: BOARD_MODAL,\r\n    payLoad: actionType,\r\n  };\r\n};\r\n\r\nexport const setColumnModal = (actionType = ADD) => {\r\n  return {\r\n    type: COLUMN_MODAL,\r\n    payLoad: actionType,\r\n  };\r\n};\r\n\r\nexport const setCardModal = (actionType = ADD) => {\r\n  return {\r\n    type: CARD_MODAL,\r\n    payLoad: actionType,\r\n  };\r\n};\r\n","import {\r\n  ADD_BOARD_REQUEST,\r\n  ADD_BOARD_SUCCESS,\r\n  ADD_BOARD_FAILURE,\r\n  EDIT_BOARD_REQUEST,\r\n  EDIT_BOARD_SUCCESS,\r\n  EDIT_BOARD_FAILURE,\r\n  DELETE_BOARD_REQUEST,\r\n  DELETE_BOARD_SUCCESS,\r\n  DELETE_BOARD_FAILURE,\r\n  FETCH_BOARD_REQUEST,\r\n  FETCH_BOARD_SUCCESS,\r\n  FETCH_BOARD_FAILURE,\r\n  BOARD_API_URL,\r\n  SET_CURRENT_BOARD_ID_AND_TITLE,\r\n} from \"./boardTypes\";\r\nimport axios from \"axios\";\r\nimport { deleteColumnByBoard, fetchColumnOrder, fetchColumns } from \"../index\";\r\n\r\nexport const fetchBoardsRequest = () => {\r\n  return {\r\n    type: FETCH_BOARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchBoardsSuccess = (boards) => {\r\n  return {\r\n    type: FETCH_BOARD_SUCCESS,\r\n    payLoad: boards,\r\n  };\r\n};\r\n\r\nexport const fetchBoardsFailure = (error) => {\r\n  return {\r\n    type: FETCH_BOARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const addNewBoardRequest = () => {\r\n  return {\r\n    type: ADD_BOARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addNewBoardSuccess = () => {\r\n  return {\r\n    type: ADD_BOARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const addNewBoardFailure = (error) => {\r\n  return {\r\n    type: ADD_BOARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const editBoardRequest = () => {\r\n  return {\r\n    type: EDIT_BOARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const editBoardSuccess = () => {\r\n  return {\r\n    type: EDIT_BOARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const editBoardFailure = (error) => {\r\n  return {\r\n    type: EDIT_BOARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const deleteBoardRequest = () => {\r\n  return {\r\n    type: DELETE_BOARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const deleteBoardSuccess = () => {\r\n  return {\r\n    type: DELETE_BOARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const deleteBoardFailure = (error) => {\r\n  return {\r\n    type: DELETE_BOARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const setCurrentBoardIdAndTitle = (data) => {\r\n  return {\r\n    type: SET_CURRENT_BOARD_ID_AND_TITLE,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const addBoard = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(addNewBoardRequest());\r\n    axios\r\n      .post(`${BOARD_API_URL}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const { _id, title } = response.data.data.board;\r\n        dispatch(setCurrentBoardIdAndTitle({ id: _id, title: title }));\r\n        dispatch(fetchBoards());\r\n        dispatch(fetchColumns(_id));\r\n        dispatch(fetchColumnOrder(_id));\r\n        dispatch(addNewBoardSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(addNewBoardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editBoard = (data, boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(editBoardRequest());\r\n    axios\r\n      .patch(`${BOARD_API_URL}/${boardId}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const { _id, title } = response.data.data.board;\r\n        dispatch(setCurrentBoardIdAndTitle({ id: _id, title: title }));\r\n        dispatch(fetchBoards());\r\n        dispatch(fetchColumns(_id));\r\n        dispatch(fetchColumnOrder(_id));\r\n        dispatch(addNewBoardSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(editBoardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteBoard = (boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteBoardRequest());\r\n    axios\r\n      .delete(`${BOARD_API_URL}/${boardId}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then(() => {\r\n        dispatch(deleteBoardSuccess());\r\n        dispatch(deleteColumnByBoard());\r\n        dispatch(fetchBoards());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(deleteBoardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchBoards = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchBoardsRequest());\r\n    axios\r\n      .get(`${BOARD_API_URL}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const boards = response.data.data.boards;\r\n        const firstBoard = boards[0];\r\n        dispatch(fetchColumns(firstBoard._id));\r\n        dispatch(fetchColumnOrder(firstBoard._id));\r\n        dispatch(fetchBoardsSuccess(boards));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchBoardsFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  FETCH_COLUMN_ORDER_REQUEST,\r\n  FETCH_COLUMN_ORDER_SUCCESS,\r\n  FETCH_COLUMN_ORDER_FAILURE,\r\n  UPDATE_COLUMN_ORDER_REQUEST,\r\n  UPDATE_COLUMN_ORDER_SUCCESS,\r\n  UPDATE_COLUMN_ORDER_FAILURE,\r\n  UPDATE_COLUMN_ORDER_LOCAL,\r\n  COLUMN_ORDER_API_URL,\r\n} from \"./columnOrderTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchColumnOrderRequest = () => {\r\n  return {\r\n    type: FETCH_COLUMN_ORDER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchColumnOrderSuccess = (columnOrder) => {\r\n  return {\r\n    type: FETCH_COLUMN_ORDER_SUCCESS,\r\n    payLoad: columnOrder,\r\n  };\r\n};\r\n\r\nexport const fetchColumnOrderFailure = (error) => {\r\n  return {\r\n    type: FETCH_COLUMN_ORDER_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const updateColumnOrderRequest = () => {\r\n  return {\r\n    type: UPDATE_COLUMN_ORDER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const updateColumnOrderSuccess = () => {\r\n  return {\r\n    type: UPDATE_COLUMN_ORDER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const updateColumnOrderFailure = (error) => {\r\n  return {\r\n    type: UPDATE_COLUMN_ORDER_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const updateColumnOrderLocal = (columnOrder) => {\r\n  return {\r\n    type: UPDATE_COLUMN_ORDER_LOCAL,\r\n    payLoad: columnOrder,\r\n  };\r\n};\r\n\r\nexport const fetchColumnOrder = (boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchColumnOrderRequest());\r\n    axios\r\n      .get(`${COLUMN_ORDER_API_URL}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        params: { board: boardId },\r\n      })\r\n      .then((response) => {\r\n        const order = response.data.data.order.columnOrder;\r\n        dispatch(fetchColumnOrderSuccess(order));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchColumnOrderFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateColumnOrder = (boardId, newOrder) => {\r\n  return (dispatch) => {\r\n    dispatch(updateColumnOrderRequest());\r\n    axios\r\n      .patch(`${COLUMN_ORDER_API_URL}`, newOrder, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        params: { board: boardId },\r\n      })\r\n      .then((response) => {\r\n        dispatch(updateColumnOrderSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(updateColumnOrderFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  FETCH_COLUMNS_REQUEST,\r\n  FETCH_COLUMNS_SUCCESS,\r\n  FETCH_COLUMNS_FAILURE,\r\n  ADD_COLUMN_REQUEST,\r\n  ADD_COLUMN_SUCCESS,\r\n  ADD_COLUMN_FAILURE,\r\n  EDIT_COLUMN_REQUEST,\r\n  EDIT_COLUMN_SUCCESS,\r\n  EDIT_COLUMN_FAILURE,\r\n  DELETE_COLUMN_REQUEST,\r\n  DELETE_COLUMN_SUCCESS,\r\n  DELETE_COLUMN_FAILURE,\r\n  COLUMN_API_URL,\r\n  SET_CURRENT_COLUMN_ID_AND_TITLE,\r\n  DELETE_COLUMN_BY_BOARD,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS,\r\n  UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_REQUEST,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS,\r\n  UPDATE_CARD_ORDER_AND_COLUMN_FAILURE,\r\n  EMPTY_COLUMNS,\r\n} from \"./columnTypes\";\r\nimport axios from \"axios\";\r\nimport { fetchColumnOrder } from \"../column-order/columnOrderActions\";\r\n\r\nexport const fetchColumnsRequest = () => {\r\n  return {\r\n    type: FETCH_COLUMNS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchColumnSuccess = (columns) => {\r\n  return {\r\n    type: FETCH_COLUMNS_SUCCESS,\r\n    payLoad: columns,\r\n  };\r\n};\r\n\r\nexport const fetchColumnFailure = (error) => {\r\n  return {\r\n    type: FETCH_COLUMNS_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const addNewColumnRequest = () => {\r\n  return {\r\n    type: ADD_COLUMN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addNewColumnSuccess = () => {\r\n  return {\r\n    type: ADD_COLUMN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const addNewColumnFailure = (error) => {\r\n  return {\r\n    type: ADD_COLUMN_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const editColumnRequest = () => {\r\n  return {\r\n    type: EDIT_COLUMN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const editColumnSuccess = () => {\r\n  return {\r\n    type: EDIT_COLUMN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const editColumnFailure = (error) => {\r\n  return {\r\n    type: EDIT_COLUMN_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const deleteColumnRequest = () => {\r\n  return {\r\n    type: DELETE_COLUMN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const deleteColumnSuccess = () => {\r\n  return {\r\n    type: DELETE_COLUMN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const deleteColumnFailure = (error) => {\r\n  return {\r\n    type: DELETE_COLUMN_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const setCurrentColumnIdAndTitle = (data) => {\r\n  return {\r\n    type: SET_CURRENT_COLUMN_ID_AND_TITLE,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const deleteColumnByBoard = () => {\r\n  return {\r\n    type: DELETE_COLUMN_BY_BOARD,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderWithinColumnRequest = () => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_WITHIN_COLUMN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderWithinColumnSuccess = () => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_WITHIN_COLUMN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderWithinColumnFailure = (error) => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_WITHIN_COLUMN_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderAndColumnRequest = () => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_AND_COLUMN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderAndColumnSuccess = () => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_AND_COLUMN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const updateCardOrderAndColumnFailure = () => {\r\n  return {\r\n    type: UPDATE_CARD_ORDER_AND_COLUMN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const emptyColumns = () => {\r\n  return {\r\n    type: EMPTY_COLUMNS,\r\n  };\r\n};\r\n\r\nexport const fetchColumns = (boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchColumnsRequest());\r\n    axios\r\n      .get(`${COLUMN_API_URL}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        params: { board: boardId },\r\n      })\r\n      .then((response) => {\r\n        const columns = response.data.data.columns;\r\n        dispatch(fetchColumnSuccess(columns));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addColumn = (data, boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(addNewColumnRequest());\r\n    axios\r\n      .post(`${COLUMN_API_URL}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n        dispatch(addNewColumnSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(addNewColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editColumn = (data, columnId, boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(editColumnRequest());\r\n    axios\r\n      .patch(`${COLUMN_API_URL}/${columnId}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then(() => {\r\n        dispatch(editColumnSuccess());\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(editColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteColumn = (columnId, boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteColumnRequest());\r\n    axios\r\n      .delete(`${COLUMN_API_URL}/${columnId}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        params: { board: boardId },\r\n      })\r\n      .then(() => {\r\n        dispatch(deleteColumnSuccess());\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(deleteColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateCardOrderWithinColumn = (columnId, boardId, order) => {\r\n  return (dispatch) => {\r\n    dispatch(updateCardOrderWithinColumnRequest());\r\n    axios\r\n      .patch(\r\n        `${COLUMN_API_URL}/changecardorderwithincolumn/${columnId}`,\r\n        order,\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(updateCardOrderWithinColumnSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(updateCardOrderWithinColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateCardOrderAndColumn = (sourceColumnId, boardId, data) => {\r\n  return (dispatch) => {\r\n    dispatch(updateCardOrderAndColumnRequest());\r\n    axios\r\n      .patch(\r\n        `${COLUMN_API_URL}/changecardcolumnandorder/${sourceColumnId}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(updateCardOrderAndColumnSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(updateCardOrderAndColumnFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  ADD_CARD_REQUEST,\r\n  ADD_CARD_SUCCESS,\r\n  ADD_CARD_FAILURE,\r\n  EDIT_CARD_REQUEST,\r\n  EDIT_CARD_SUCCESS,\r\n  EDIT_CARD_FAILURE,\r\n  DELETE_CARD_REQUEST,\r\n  DELETE_CARD_SUCCESS,\r\n  DELETE_CARD_FAILURE,\r\n  CARD_API_URL,\r\n  SET_CARD_DATA,\r\n} from \"./cardTypes\";\r\nimport axios from \"axios\";\r\nimport { fetchColumns, fetchColumnOrder, emptyColumns } from \"../index\";\r\n\r\nexport const addCardRequest = () => {\r\n  return {\r\n    type: ADD_CARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = () => {\r\n  return {\r\n    type: ADD_CARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const addCardFailure = (error) => {\r\n  return {\r\n    type: ADD_CARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const editCardRequest = () => {\r\n  return {\r\n    type: EDIT_CARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const editCardSuccess = () => {\r\n  return {\r\n    type: EDIT_CARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const editCardFailure = (error) => {\r\n  return {\r\n    type: EDIT_CARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const setCardData = (data) => {\r\n  return {\r\n    type: SET_CARD_DATA,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const deleteCardRequest = () => {\r\n  return {\r\n    type: DELETE_CARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const deleteCardSuccess = () => {\r\n  return {\r\n    type: DELETE_CARD_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const deleteCardFailure = (error) => {\r\n  return {\r\n    type: DELETE_CARD_FAILURE,\r\n    payLoad: error,\r\n  };\r\n};\r\n\r\nexport const addCard = (data, boardId, columnId) => {\r\n  return (dispatch) => {\r\n    dispatch(emptyColumns());\r\n    dispatch(addCardRequest());\r\n    axios\r\n      .post(`${CARD_API_URL}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n        dispatch(addCardSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(addCardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editCard = (cardId, boardId, data) => {\r\n  return (dispatch) => {\r\n    dispatch(emptyColumns());\r\n    dispatch(editCardRequest());\r\n    axios\r\n      .patch(`${CARD_API_URL}/${cardId}`, data, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n        dispatch(editCardSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(editCardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteCard = (cardId, boardId) => {\r\n  return (dispatch) => {\r\n    dispatch(emptyColumns());\r\n    dispatch(deleteCardRequest());\r\n    axios\r\n      .delete(`${CARD_API_URL}/${cardId}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(fetchColumns(boardId));\r\n        dispatch(fetchColumnOrder(boardId));\r\n        dispatch(deleteCardSuccess());\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(deleteCardFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { FaBell } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleRightSideNav } from \"../../redux/index\";\r\n\r\nimport \"./notificationIcon.css\";\r\n\r\nconst NotificationIcon = ({ toggleRightSideNav }) => (\r\n  <div className=\"notification-icon-container\">\r\n    <FaBell\r\n      onClick={() => toggleRightSideNav()}\r\n      className=\"notification-icon\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleRightSideNav: () => dispatch(toggleRightSideNav()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NotificationIcon);\r\n","import {\r\n  TOGGLE_RIGHT_SIDE_NAV,\r\n  TOGGLE_FLAT_CARD,\r\n  TOGGLE_GRID_CARD,\r\n} from \"./rightSideNavTypes\";\r\n\r\nexport const toggleRightSideNav = () => {\r\n  return {\r\n    type: TOGGLE_RIGHT_SIDE_NAV,\r\n  };\r\n};\r\n\r\nexport const toggleFlatCard = () => {\r\n  return {\r\n    type: TOGGLE_FLAT_CARD,\r\n  };\r\n};\r\n\r\nexport const toggleGridCard = () => {\r\n  return {\r\n    type: TOGGLE_GRID_CARD,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./profileImage.css\";\r\n\r\nconst UserProfile = () => (\r\n  <div className=\"user-profile-container\">\r\n    <img\r\n      className=\"user-profile-image\"\r\n      alt=\"img\"\r\n      src=\"https://robohash.org/620050a4db5104bae758cd75171d64ca?size=100x100\"\r\n    />\r\n    <div className=\"user-profile-name\">JohnDoe</div>\r\n  </div>\r\n);\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaBars } from \"react-icons/fa\";\r\n\r\nimport { showLeftSideNav } from \"../../redux/index\";\r\n\r\nimport NotificationIcon from \"../notification-icon/NotificationIcon\";\r\nimport UserProfile from \"../profile-image/ProfileImage\";\r\n\r\nimport \"./appbar.css\";\r\nimport \"./kevvlar-logo.svg\";\r\n\r\nconst AppBar = ({ toggleLeftSideNav, boardTitle }) => (\r\n  <header>\r\n    <div className=\"appbar-container\">\r\n      <div className=\"appbar-menu-container\">\r\n        <div\r\n          onClick={() => {\r\n            toggleLeftSideNav();\r\n          }}\r\n          className=\"appbar-ham-icon-container\"\r\n        >\r\n          <FaBars className=\"appbar-ham-icon\" />\r\n          <div className=\"appbar-logo primary-text-color\">\r\n        <svg\r\n          width=\"120\"\r\n          height=\"38\"\r\n          viewBox=\"0 0 178 38\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M47.2205 20.875L44.783 23.5V30H40.0955V7.25H44.783V17.5625L46.8455 14.7344L52.6423 7.25H58.408L50.3298 17.3594L58.6423 30H53.0642L47.2205 20.875ZM74.0955 20.1406H65.0955V26.2344H75.658V30H60.408V7.25H75.6267V11.0469H65.0955V16.4688H74.0955V20.1406ZM86.8142 24.3594L91.9705 7.25H97.1892L89.2673 30H84.3767L76.4861 7.25H81.6892L86.8142 24.3594ZM107.752 24.3594L112.908 7.25H118.127L110.205 30H105.314L97.4236 7.25H102.627L107.752 24.3594ZM124.97 26.2344H134.924V30H120.283V7.25H124.97V26.2344ZM150.783 25.3125H142.564L141.002 30H136.017L144.486 7.25H148.83L157.345 30H152.361L150.783 25.3125ZM143.83 21.5156H149.517L146.658 13L143.83 21.5156ZM167.892 21.6719H164.158V30H159.47V7.25H167.924C170.611 7.25 172.684 7.84896 174.142 9.04688C175.601 10.2448 176.33 11.9375 176.33 14.125C176.33 15.6771 175.991 16.974 175.314 18.0156C174.648 19.0469 173.632 19.8698 172.267 20.4844L177.189 29.7812V30H172.158L167.892 21.6719ZM164.158 17.875H167.939C169.116 17.875 170.028 17.5781 170.674 16.9844C171.319 16.3802 171.642 15.5521 171.642 14.5C171.642 13.4271 171.335 12.5833 170.72 11.9688C170.116 11.3542 169.184 11.0469 167.924 11.0469H164.158V17.875Z\"\r\n            fill=\"#EBEBEB\"\r\n          />\r\n          <rect\r\n            x=\"8.48511\"\r\n            y=\"27.4854\"\r\n            width=\"12\"\r\n            height=\"12\"\r\n            transform=\"rotate(-45 8.48511 27.4854)\"\r\n            fill=\"#47B98F\"\r\n          />\r\n          <path\r\n            d=\"M0 19L8.48528 10.5147L16.9706 19L8.48528 27.4853L0 19Z\"\r\n            fill=\"#E27561\"\r\n          />\r\n          <rect\r\n            x=\"8.48511\"\r\n            y=\"10.5146\"\r\n            width=\"12\"\r\n            height=\"12\"\r\n            transform=\"rotate(-45 8.48511 10.5146)\"\r\n            fill=\"#03A9F4\"\r\n          />\r\n        </svg>\r\n      </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"appbar-user-menu-container\">\r\n        <NotificationIcon />\r\n        <UserProfile />\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boards: state.board.boards,\r\n    boardTitle: state.board.currentBoardTitle,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleLeftSideNav: () => dispatch(showLeftSideNav()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaBars } from \"react-icons/fa\";\r\n\r\nimport { hideLeftSideNav } from \"../../redux/index\";\r\n\r\nimport \"./sidenav-left-header.styles.css\";\r\n\r\nconst LeftSideNavHeader = ({ unToogleSideNav }) => (\r\n  <div className=\"sidenav-left-header-container\">\r\n    <div className=\"sidenav-left-header-ham-icon-container\">\r\n      <FaBars onClick={() => unToogleSideNav()} />\r\n    </div>\r\n    <div className=\"sidenav-left-exit-wrapper\" onClick={() => unToogleSideNav()}></div>\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    unToogleSideNav: () => dispatch(hideLeftSideNav()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftSideNavHeader);\r\n","import React from \"react\";\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setBoardModal,\r\n  setCurrentBoardIdAndTitle,\r\n  fetchColumnOrder,\r\n  fetchColumns,\r\n} from \"../../redux\";\r\n\r\nimport { EDIT, DELETE } from \"../../redux/modal/modalTypes\";\r\n\r\nimport \"./boardItem.css\";\r\n\r\nconst BoardItem = ({\r\n  board,\r\n  editBoardModal,\r\n  deleteBoardModal,\r\n  setBoardIdAndTitle,\r\n  fetchColumnOrder,\r\n  fetchColumns,\r\n}) => (\r\n  <div\r\n    className=\"board-item-container\"\r\n    onClick={() => {\r\n      setBoardIdAndTitle({\r\n        id: board._id,\r\n        title: board.title,\r\n      });\r\n      fetchColumns(board._id);\r\n      fetchColumnOrder(board._id);\r\n    }}\r\n  >\r\n    <div className=\"board-item-name\">{board.title}</div>\r\n\r\n    <div className=\"board-item-icons-cotainer\">\r\n      <FaEdit\r\n        className=\"edit-board-icon\"\r\n        onClick={() => {\r\n          setBoardIdAndTitle({\r\n            id: board._id,\r\n            title: board.title,\r\n          });\r\n          editBoardModal();\r\n        }}\r\n      />\r\n      <FaTrash\r\n        className=\"delete-board-icon\"\r\n        onClick={() => {\r\n          setBoardIdAndTitle({\r\n            id: board._id,\r\n            title: board.title,\r\n          });\r\n          deleteBoardModal();\r\n        }}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editBoardModal: () => dispatch(setBoardModal(EDIT)),\r\n    deleteBoardModal: () => dispatch(setBoardModal(DELETE)),\r\n    setBoardIdAndTitle: (data) => dispatch(setCurrentBoardIdAndTitle(data)),\r\n    fetchColumnOrder: (data) => dispatch(fetchColumnOrder(data)),\r\n    fetchColumns: (data) => dispatch(fetchColumns(data)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardItem);\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setBoardModal } from \"../../redux/index\";\r\n\r\nimport BoardItem from \"../board-item/BoardItem\";\r\n\r\nimport \"./boardlist.css\";\r\n\r\nconst BoardList = ({ addNewBoardModal, boardsList }) => {\r\n  return (\r\n    <div className=\"sidenav-left-board-list\">\r\n      <InfiniteScroll\r\n        dataLength={boardsList.length}\r\n        hasMore={true}\r\n        height={300}\r\n      >\r\n        {boardsList.map((board, index) => (\r\n          <BoardItem key={index} board={board} />\r\n        ))}\r\n      </InfiniteScroll>\r\n      <div\r\n        onClick={addNewBoardModal}\r\n        className=\"sidenav-left-add-new-board-button\"\r\n      >\r\n        + Add new board\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewBoardModal: () => dispatch(setBoardModal()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boardsList: state.board.boards,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SideNavHeader from \"../sidenav-left-header/sidenav-left-header.component\";\r\nimport BoardList from \"../board-list/BoardList\";\r\n\r\nimport \"./SideNavLeft.css\";\r\n\r\nconst LeftSideNav = ({ isLoading }) => {\r\n  return (\r\n    <nav className=\"sidenav-left-container\">\r\n      <SideNavHeader />\r\n      <div className=\"sidenav-left-board-holder\">\r\n        <div className=\"sidenav-left-board-header\">Boards</div>\r\n        {isLoading ? <h2>Loading...</h2> : <BoardList />}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.board.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(LeftSideNav);\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport \"./task.css\";\r\n\r\nconst TaskItem = () => (\r\n  <div className=\"task-item-holder\">\r\n    <div className=\"task-item\">\r\n      Card title - 08/17/2021\r\n      <div className=\"task-item-board\">Feature 3</div>\r\n    </div>\r\n    <FaTimes className=\"task-cancel-icon\" />\r\n  </div>\r\n);\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport TaskItem from \"../task/Task\";\r\n\r\nimport \"./taskList.css\";\r\n\r\nconst TaskList = ({ length }) => (\r\n  <InfiniteScroll dataLength={length} hasMore={true} height={350}>\r\n    <TaskItem />\r\n    <TaskItem />\r\n    <TaskItem />\r\n  </InfiniteScroll>\r\n);\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaEllipsisH, FaThLarge, FaMinus } from \"react-icons/fa\";\r\n\r\nimport { toggleGridCard, toggleFlatCard } from \"../../redux/index.js\";\r\n\r\nimport TaskList from \"../task-list/TaskList\";\r\n\r\nimport \"./sideNavRight.css\";\r\n\r\nconst RightSideNav = ({ history, toggleGrid, toggleFlat }) => {\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/signin\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"sidenav-right-container\">\r\n      <div className=\"sidenav-right-menu-icons-container\">\r\n        <p className=\"sidenav-right-menu-title\">Feature 3</p>\r\n        <button className=\"sidenav-right-more-icon\">\r\n          <FaEllipsisH />\r\n        </button>\r\n        <button className=\"sidenav-right-grid-icon\">\r\n          <FaThLarge onClick={() => toggleGrid()} />\r\n        </button>\r\n        <button className=\"sidenav-right-minus-icon\">\r\n          <FaMinus onClick={() => toggleFlat()} />\r\n        </button>\r\n      </div>\r\n      <div className=\"sidenav-right-menu-activity\">\r\n        <div className=\"sidenav-right-activity-title\">Tasks due</div>\r\n        <TaskList length={20} />\r\n        <div onClick={handleSignOut} className=\"sidenav-right-logout\">\r\n          Log out\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleGrid: () => dispatch(toggleGridCard()),\r\n    toggleFlat: () => dispatch(toggleFlatCard()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(RightSideNav));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaEllipsisH } from \"react-icons/fa\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport moment from \"moment\";\r\n\r\nimport { setCardModal, setCardData } from \"../../redux/index\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ card, index, isGrid, editCardModal, setCurrentCardData }) => (\r\n  <Draggable draggableId={card._id} index={index}>\r\n    {(provided) => (\r\n      <div\r\n        className=\"card\"\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n      >\r\n        <div className=\"cardlabelholder\">\r\n          <div id=\"card-label\" className=\"card-label\"></div>\r\n        </div>\r\n        <div className=\"card-inner\">\r\n          <p className=\"card-title\">{card.title}</p>\r\n          {isGrid ? (\r\n            <span>\r\n              <p className=\"card-description\">{card.description}</p>\r\n              <div className=\"card-menu\">\r\n                <p className=\"card-date\">{moment(card.date).format()}</p>\r\n                <FaEllipsisH\r\n                  onClick={() => {\r\n                    editCardModal(\"EDIT\");\r\n                    setCurrentCardData({\r\n                      id: card._id,\r\n                      title: card.title,\r\n                      description: card.description,\r\n                      date: card.date,\r\n                      color: card.colorLabel,\r\n                    });\r\n                  }}\r\n                  className=\"card-more-icon\"\r\n                />\r\n              </div>\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Draggable>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isGrid: state.sideNavRight.isGrid,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editCardModal: (type) => dispatch(setCardModal(type)),\r\n    setCurrentCardData: (data) => dispatch(setCardData(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n","import React from \"react\";\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setCardModal,\r\n  setColumnModal,\r\n  setCurrentColumnIdAndTitle,\r\n} from \"../../redux\";\r\n\r\nimport Card from \"../card/Card\";\r\n\r\nimport \"./column.css\";\r\nimport { DELETE, EDIT } from \"../../redux/modal/modalTypes\";\r\n\r\nconst mapOrder = (array, order, key) => {\r\n  array.sort(function (a, b) {\r\n    var A = a[key],\r\n      B = b[key];\r\n\r\n    if (order.indexOf(A) > order.indexOf(B)) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n\r\n  return array;\r\n};\r\n\r\nconst Column = ({\r\n  column,\r\n  index,\r\n  addNewCardModal,\r\n  editColumnModal,\r\n  deleteColumnModal,\r\n  setColumnIdAndTitle,\r\n}) => {\r\n  return (\r\n    <Draggable draggableId={column._id} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          className=\"column\"\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div className=\"column-header-container\">\r\n            <div className=\"column-handle\" {...provided.dragHandleProps}>\r\n              <p className=\"column-header-title\">{column.title}</p>\r\n            </div>\r\n            <div className=\"column-header-icon-container\">\r\n              <FaTrash\r\n                onClick={() => {\r\n                  setColumnIdAndTitle({\r\n                    id: column._id,\r\n                    title: column.title,\r\n                  });\r\n                  deleteColumnModal();\r\n                }}\r\n                className=\"column-header-trash-icon\"\r\n              />\r\n              <FaEdit\r\n                onClick={() => {\r\n                  setColumnIdAndTitle({\r\n                    id: column._id,\r\n                    title: column.title,\r\n                  });\r\n                  editColumnModal();\r\n                }}\r\n                className=\"column-header-edit-icon\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Droppable droppableId={column._id} type=\"card\">\r\n            {(provided) => (\r\n              <div\r\n                className=\"card-container\"\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                {mapOrder(column.cards, column.cardOrder, \"_id\").map(\r\n                  (card, index) => (\r\n                    <Card key={card._id} card={card} index={index} />\r\n                  )\r\n                )}\r\n\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <button\r\n            onClick={() => {\r\n              setColumnIdAndTitle({\r\n                id: column._id,\r\n                title: column.title,\r\n              });\r\n              addNewCardModal();\r\n            }}\r\n            className=\"new-card-button\"\r\n          >\r\n            + Add New Card\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewCardModal: () => dispatch(setCardModal()),\r\n    editColumnModal: () => dispatch(setColumnModal(EDIT)),\r\n    deleteColumnModal: () => dispatch(setColumnModal(DELETE)),\r\n    setColumnIdAndTitle: (data) => dispatch(setCurrentColumnIdAndTitle(data)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Column);\r\n","import React from \"react\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setColumnModal,\r\n  updateColumnOrder,\r\n  updateColumnOrderLocal,\r\n  updateCardOrderWithinColumn,\r\n  updateCardOrderAndColumn,\r\n} from \"../../redux/index\";\r\n\r\nimport Column from \"../column/Column\";\r\n\r\nimport \"./columnHolder.css\";\r\n\r\nconst mapOrder = (array, order, key) => {\r\n  array.sort(function (a, b) {\r\n    var A = a[key],\r\n      B = b[key];\r\n\r\n    if (order.indexOf(A) > order.indexOf(B)) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n\r\n  return array;\r\n};\r\n\r\nconst ColumnHolder = ({\r\n  addNewColumnModal,\r\n  columns,\r\n  columnOrder,\r\n  updateColumnOrder,\r\n  boardId,\r\n  updateOrderLocal,\r\n  updateCardOrderInColumn,\r\n  updateCardOrderAndColumnForeign,\r\n  isLoading,\r\n}) => {\r\n  const onDragEnd = (result) => {\r\n    const { destination, draggableId, source, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    // move column\r\n    if (type === \"column\" && destination.index !== source.index) {\r\n      const newColumnOrder = Array.from(columnOrder);\r\n      const [reOrderedItem] = newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, reOrderedItem);\r\n\r\n      // send this to column orderState\r\n      updateOrderLocal(newColumnOrder);\r\n      updateColumnOrder(boardId, {\r\n        columnOrder: newColumnOrder,\r\n      });\r\n    }\r\n\r\n    // move card within column\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index !== destination.index &&\r\n      type === \"card\"\r\n    ) {\r\n      const currentColumn = columns.find((column) =>\r\n        column.id === destination.droppableId ? column : null\r\n      );\r\n      const newCardOrder = Array.from(currentColumn.cardOrder);\r\n      const [reOrderedCards] = newCardOrder.splice(source.index, 1);\r\n      newCardOrder.splice(destination.index, 0, reOrderedCards);\r\n\r\n      updateCardOrderInColumn(destination.droppableId, boardId, {\r\n        cardOrder: newCardOrder,\r\n      });\r\n    }\r\n\r\n    // move card into another column\r\n    if (source.droppableId !== destination.droppableId && type === \"card\") {\r\n      const targetColumn = columns.find((column) =>\r\n        column.id === destination.droppableId ? column : null\r\n      );\r\n\r\n      const targetColumnCardOrder = targetColumn.cardOrder;\r\n      const newTargetColumnCardOrder = [...targetColumnCardOrder];\r\n      newTargetColumnCardOrder.splice(destination.index, 0, draggableId);\r\n\r\n      updateCardOrderAndColumnForeign(source.droppableId, boardId, {\r\n        cardId: draggableId,\r\n        cardOrder: newTargetColumnCardOrder,\r\n        destinationColumnId: destination.droppableId,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollContainer\r\n      className=\"scroll-container\"\r\n      vertical={true}\r\n      horizontal={true}\r\n    >\r\n      {isLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable\r\n            droppableId=\"all-columns\"\r\n            direction=\"horizontal\"\r\n            type=\"column\"\r\n          >\r\n            {(provided) => (\r\n              <div\r\n                className=\"column-holder\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {mapOrder(columns, columnOrder, \"_id\").map((column, index) => (\r\n                  <Column key={column._id} column={column} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n                <button\r\n                  onClick={addNewColumnModal}\r\n                  className=\"new-column-button\"\r\n                >\r\n                  + Add New Column\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      )}\r\n    </ScrollContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    columnOrder: state.columnOrder.order,\r\n    columns: state.column.columns,\r\n    boardId: state.board.currentBoardId,\r\n    boards: state.board.boards,\r\n    isLoading: state.column.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewColumnModal: () => dispatch(setColumnModal()),\r\n    updateColumnOrder: (boardId, order) =>\r\n      dispatch(updateColumnOrder(boardId, order)),\r\n    updateOrderLocal: (order) => dispatch(updateColumnOrderLocal(order)),\r\n    updateCardOrderInColumn: (columnId, boardId, order) =>\r\n      dispatch(updateCardOrderWithinColumn(columnId, boardId, order)),\r\n    updateCardOrderAndColumnForeign: (sourceColumnId, boardId, data) =>\r\n      dispatch(updateCardOrderAndColumn(sourceColumnId, boardId, data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnHolder);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { closeModal, addBoard, editBoard, deleteBoard } from \"../../../redux\";\r\nimport { ADD, EDIT, DELETE } from \"../../../redux/modal/modalTypes\";\r\n\r\nimport \"./boardModal.css\";\r\n\r\nconst BoardModal = ({\r\n  type,\r\n  closeModal,\r\n  addBoard,\r\n  boardId,\r\n  boardTitle,\r\n  editBoard,\r\n  deleteBoard,\r\n}) => {\r\n  const AddBoard = () => {\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    return (\r\n      <div className=\"modal-board-body\">\r\n        <h2 className=\"modal-board-title\">Add New Board</h2>\r\n        <input\r\n          className=\"modal-board-text\"\r\n          type=\"text\"\r\n          name=\"boardName\"\r\n          value={boardName}\r\n          onChange={(e) => setBoardName(e.target.value)}\r\n          placeholder=\"New Board\"\r\n        />\r\n        <button\r\n          className=\"modal-board-button\"\r\n          onClick={() => {\r\n            const body = {\r\n              title: boardName,\r\n            };\r\n            setBoardName(\"\");\r\n            addBoard(body);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const EditBoard = () => {\r\n    const [editBoardName, setEditBoardName] = useState(boardTitle.toString());\r\n    return (\r\n      <div className=\"modal-board-body\">\r\n        <h2 className=\"modal-board-title\">Edit Board</h2>\r\n        <input\r\n          className=\"modal-board-text\"\r\n          type=\"text\"\r\n          name=\"editBoardName\"\r\n          value={editBoardName}\r\n          onChange={(e) => setEditBoardName(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"modal-board-button\"\r\n          onClick={() => {\r\n            setEditBoardName(\"\");\r\n            editBoard({ title: editBoardName }, boardId);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DeleteBoard = () => {\r\n    return (\r\n      <div className=\"modal-board-body\">\r\n        <h2 className=\"modal-board-title\">Are You Sure?</h2>\r\n        <span className=\"modal-sub-text\">\r\n          All information contained in this board will be delete\r\n        </span>\r\n        <div className=\"modal-button-container\">\r\n          <button\r\n            className=\"delete-button\"\r\n            onClick={() => {\r\n              deleteBoard(boardId);\r\n              closeModal();\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button className=\"modal-cancel-button\" onClick={closeModal}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-board\">\r\n      <div className=\"close-icon-container\">\r\n        <FaTimes onClick={closeModal} className=\"close-icon\" />\r\n      </div>\r\n      {type === ADD ? <AddBoard /> : null}\r\n      {type === EDIT ? <EditBoard /> : null}\r\n      {type === DELETE ? <DeleteBoard /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    type: state.modal.modalActionType,\r\n    boardId: state.board.currentBoardId,\r\n    boardTitle: state.board.currentBoardTitle,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeModal: () => dispatch(closeModal()),\r\n    addBoard: (data) => dispatch(addBoard(data)),\r\n    editBoard: (data, id) => dispatch(editBoard(data, id)),\r\n    deleteBoard: (id) => dispatch(deleteBoard(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardModal);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  closeModal,\r\n  addColumn,\r\n  deleteColumn,\r\n  editColumn,\r\n} from \"../../../redux\";\r\nimport { ADD, EDIT, DELETE } from \"../../../redux/modal/modalTypes\";\r\n\r\nimport \"./columnModal.css\";\r\n\r\nconst ColumnModal = ({\r\n  closeModal,\r\n  type,\r\n  columnId,\r\n  boardId,\r\n  createColumn,\r\n  deleteCurrentColumn,\r\n  currentColumnTitle,\r\n  updateColumn,\r\n}) => {\r\n  const AddColumn = () => {\r\n    const [columnTitle, setColumnTitle] = useState(\"\");\r\n    return (\r\n      <div className=\"modal-board-body\">\r\n        <h2 className=\"modal-board-title\">Add New Column</h2>\r\n        <input\r\n          className=\"modal-board-text\"\r\n          type=\"text\"\r\n          placeholder=\"New Column\"\r\n          value={columnTitle}\r\n          onChange={(e) => setColumnTitle(e.target.value)}\r\n        />\r\n\r\n        <button\r\n          className=\"modal-board-button\"\r\n          onClick={() => {\r\n            createColumn(\r\n              {\r\n                title: columnTitle,\r\n                board: boardId,\r\n              },\r\n              boardId\r\n            );\r\n            setColumnTitle(\"\");\r\n            closeModal();\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const EditColumn = () => {\r\n    const [columnEditTitle, setColumnEditTitle] = useState(currentColumnTitle);\r\n    return (\r\n      <div className=\"modal-board-body\">\r\n        <h2 className=\"modal-board-title\">Edit Column</h2>\r\n        <input\r\n          className=\"modal-board-text\"\r\n          type=\"text\"\r\n          placeholder=\"Edit Column\"\r\n          value={columnEditTitle}\r\n          onChange={(e) => setColumnEditTitle(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"modal-board-button\"\r\n          onClick={() => {\r\n            updateColumn({ title: columnEditTitle }, columnId, boardId);\r\n            setColumnEditTitle(\"\");\r\n            closeModal();\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DeleteColumn = () => (\r\n    <div className=\"modal-board-body\">\r\n      <h2 className=\"modal-board-title\">Are You Sure?</h2>\r\n      <span className=\"modal-sub-text\">\r\n        All information contained in this column will be delete\r\n      </span>\r\n      <div className=\"modal-button-container\">\r\n        <button\r\n          className=\"delete-button\"\r\n          onClick={() => {\r\n            deleteCurrentColumn(columnId, boardId);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button className=\"modal-cancel-button\" onClick={closeModal}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"modal-board\">\r\n      <div className=\"close-icon-container\">\r\n        <FaTimes onClick={closeModal} className=\"close-icon\" />\r\n      </div>\r\n      {type === ADD ? <AddColumn /> : null}\r\n      {type === EDIT ? <EditColumn /> : null}\r\n      {type === DELETE ? <DeleteColumn /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    type: state.modal.modalActionType,\r\n    boardId: state.board.currentBoardId,\r\n    columnId: state.column.currentColumnId,\r\n    currentColumnTitle: state.column.currentColumnTitle,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeModal: () => dispatch(closeModal()),\r\n    createColumn: (data, id) => dispatch(addColumn(data, id)),\r\n    deleteCurrentColumn: (columnId, boardId) =>\r\n      dispatch(deleteColumn(columnId, boardId)),\r\n    updateColumn: (data, columnId, boardId) =>\r\n      dispatch(editColumn(data, columnId, boardId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnModal);\r\n","import React, { useState } from \"react\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { closeModal, addCard, deleteCard, editCard } from \"../../../redux\";\r\nimport { ADD, EDIT } from \"../../../redux/modal/modalTypes\";\r\n\r\nimport \"./cardModal.css\";\r\n\r\nconst CardModal = ({\r\n  closeModal,\r\n  boardId,\r\n  columnId,\r\n  addNewCard,\r\n  type,\r\n  cardId,\r\n  cardTitle,\r\n  cardDescription,\r\n  cardDate,\r\n  cardColor,\r\n  removeCard,\r\n  updateCard,\r\n}) => {\r\n  const AddCardModal = () => {\r\n    const [cardTitle, setCardTitle] = useState(\"\");\r\n    const [cardBody, setCardBody] = useState(\"\");\r\n    const [cardDate, setCardDate] = useState(\"\");\r\n    const [cardColor, setCardColor] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"modal-body\">\r\n        <h2 className=\"modal-title\">Add New Card</h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"input-big\"\r\n          maxLength={75}\r\n          placeholder=\"Card title\"\r\n          className=\"modal-body-title\"\r\n          value={cardTitle}\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"desc-big\"\r\n          maxLength={1000}\r\n          value={cardBody}\r\n          onChange={(e) => setCardBody(e.target.value)}\r\n          placeholder=\"Write something...\"\r\n          className=\"modal-body-description\"\r\n        ></textarea>\r\n        <div className=\"modal-checkbox-area\">\r\n          <div className=\"modal-checkbox-bar\">\r\n            <FaCheck className=\"modal-check-icon-check\" />\r\n            <div className=\"modal-progress-bar-contianer\">\r\n              <div id=\"cba182952\" className=\"cbabarprogress\"></div>\r\n            </div>\r\n            <div className=\"modal-progress-percentage\">0 %</div>\r\n          </div>\r\n          <div className=\"modal-check-columns\"></div>\r\n          <input placeholder=\"+ Add item\" className=\"modal-checkbox-input\" />\r\n        </div>\r\n        <div className=\"modal-footer-container\">\r\n          <input\r\n            className=\"date-picker\"\r\n            value={cardDate}\r\n            onChange={(e) => setCardDate(e.target.value)}\r\n            type=\"date\"\r\n            name=\"Due Date\"\r\n          />\r\n          <select\r\n            className=\"select-color\"\r\n            onChange={(e) => setCardColor(e.target.value)}\r\n            value={cardColor}\r\n          >\r\n            <option value=\"\">Color Label</option>\r\n            <option value=\"#ff0000\">Red</option>\r\n            <option value=\"#26d100\">Green</option>\r\n            <option value=\"#ffff07\">Yellow</option>\r\n            <option value=\"#143bff\">Blue</option>\r\n          </select>\r\n          <button\r\n            className=\"modal-board-button\"\r\n            onClick={() => {\r\n              addNewCard(\r\n                {\r\n                  title: cardTitle,\r\n                  description: cardBody,\r\n                  date: cardDate,\r\n                  colorLabel: cardColor,\r\n                  board: boardId,\r\n                  column: columnId,\r\n                },\r\n                boardId,\r\n                columnId\r\n              );\r\n              setCardTitle(\"\");\r\n              setCardBody(\"\");\r\n              setCardDate(\"\");\r\n              setCardColor(\"\");\r\n              closeModal();\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const EditBoardModal = () => {\r\n    const [editCardTitle, setEditCardTitle] = useState(cardTitle);\r\n    const [editCardBody, setEditCardBody] = useState(cardDescription);\r\n    const [editCardDate, setEditCardDate] = useState(cardDate);\r\n    const [editCardColor, setEditCardColor] = useState(cardColor);\r\n\r\n    return (\r\n      <div className=\"modal-body\">\r\n        <h2 className=\"modal-title\">Edit Card</h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"input-big\"\r\n          maxLength={75}\r\n          placeholder=\"Card title\"\r\n          className=\"modal-body-title\"\r\n          value={editCardTitle}\r\n          onChange={(e) => setEditCardTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"desc-big\"\r\n          maxLength={1000}\r\n          value={editCardBody}\r\n          onChange={(e) => setEditCardBody(e.target.value)}\r\n          placeholder=\"Write something...\"\r\n          className=\"modal-body-description\"\r\n        ></textarea>\r\n        <div className=\"modal-checkbox-area\">\r\n          <div className=\"modal-checkbox-bar\">\r\n            <FaCheck className=\"modal-check-icon-check\" />\r\n            <div className=\"modal-progress-bar-contianer\">\r\n              <div id=\"cba182952\" className=\"cbabarprogress\"></div>\r\n            </div>\r\n            <div className=\"modal-progress-percentage\">0 %</div>\r\n          </div>\r\n          <div className=\"modal-check-columns\"></div>\r\n          <input placeholder=\"+ Add item\" className=\"modal-checkbox-input\" />\r\n        </div>\r\n        <div className=\"modal-footer-container\">\r\n          <input\r\n            className=\"date-picker\"\r\n            value={editCardDate}\r\n            onChange={(e) => setEditCardDate(e.target.value)}\r\n            type=\"date\"\r\n            name=\"Due Date\"\r\n          />\r\n          <select\r\n            className=\"select-color\"\r\n            onChange={(e) => setEditCardColor(e.target.value)}\r\n            value={editCardColor}\r\n          >\r\n            <option value=\"\">Color Label</option>\r\n            <option value=\"#ff0000\">Red</option>\r\n            <option value=\"#26d100\">Green</option>\r\n            <option value=\"#ffff07\">Yellow</option>\r\n            <option value=\"#143bff\">Blue</option>\r\n          </select>\r\n          <button\r\n            className=\"modal-board-button\"\r\n            onClick={() => {\r\n              updateCard(cardId, boardId, {\r\n                title: editCardTitle,\r\n                description: editCardBody,\r\n                date: editCardDate,\r\n                colorLabel: editCardColor,\r\n              });\r\n              closeModal();\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            className=\"delete-button\"\r\n            onClick={() => {\r\n              removeCard(cardId, boardId);\r\n              closeModal();\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"close-icon-container\">\r\n        <FaTimes onClick={closeModal} className=\"close-icon\" />\r\n        {type === ADD ? <AddCardModal /> : null}\r\n        {type === EDIT ? <EditBoardModal /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boardId: state.board.currentBoardId,\r\n    columnId: state.column.currentColumnId,\r\n    type: state.modal.modalActionType,\r\n    cardId: state.card.currentCardId,\r\n    cardTitle: state.card.title,\r\n    cardDescription: state.card.description,\r\n    cardDate: state.card.date,\r\n    cardColor: state.card.color,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeModal: () => dispatch(closeModal()),\r\n    addNewCard: (data, boardId, columnId) =>\r\n      dispatch(addCard(data, boardId, columnId)),\r\n    removeCard: (cardId, boardId) => dispatch(deleteCard(cardId, boardId)),\r\n    updateCard: (cardId, boardId, data) =>\r\n      dispatch(editCard(cardId, boardId, data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { closeModal } from \"../../redux/index\";\r\nimport {\r\n  BOARD_MODAL,\r\n  COLUMN_MODAL,\r\n  CARD_MODAL,\r\n} from \"../../redux/modal/modalTypes\";\r\n\r\nimport BoardModal from \"./board-modal/BoardModal\";\r\nimport ColumnModal from \"./column-modal/ColumnModal\";\r\nimport CardModal from \"./card-modal/CardModal\";\r\n\r\nimport \"./modal.css\";\r\n\r\nconst Modal = ({ closeModal, modalType }) => {\r\n  switch (modalType) {\r\n    case BOARD_MODAL:\r\n      return (\r\n        <div className=\"modal-wrapper\">\r\n          <div className=\"modal-close-overlay\" onClick={closeModal}></div>\r\n          <BoardModal />\r\n        </div>\r\n      );\r\n    case CARD_MODAL:\r\n      return (\r\n        <div className=\"modal-wrapper\">\r\n          <div className=\"modal-close-overlay\" onClick={closeModal}></div>\r\n          <CardModal />\r\n        </div>\r\n      );\r\n    case COLUMN_MODAL:\r\n      return (\r\n        <div className=\"modal-wrapper\">\r\n          <div className=\"modal-close-overlay\" onClick={closeModal}></div>\r\n          <ColumnModal />\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modalType: state.modal.modalType,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeModal: () => dispatch(closeModal()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","const LockIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12.6667 5.33333H11.9048V3.80952C11.9048 1.70667 10.1981 0 8.09524 0C5.99238 0 4.28571 1.70667 4.28571 3.80952V5.33333H3.52381C2.6819 5.33333 2 6.01524 2 6.85714V14.4762C2 15.3181 2.6819 16 3.52381 16H12.6667C13.5086 16 14.1905 15.3181 14.1905 14.4762V6.85714C14.1905 6.01524 13.5086 5.33333 12.6667 5.33333ZM8.09524 12.1905C7.25333 12.1905 6.57143 11.5086 6.57143 10.6667C6.57143 9.82476 7.25333 9.14286 8.09524 9.14286C8.93714 9.14286 9.61905 9.82476 9.61905 10.6667C9.61905 11.5086 8.93714 12.1905 8.09524 12.1905ZM10.4571 5.33333H5.73333V3.80952C5.73333 2.50667 6.79238 1.44762 8.09524 1.44762C9.3981 1.44762 10.4571 2.50667 10.4571 3.80952V5.33333Z\"\r\n        fill=\"#A0A0A0\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst BoardIcon = () => {\r\n  return (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M4.66683 12.6665H11.3335V2.6665H4.66683V12.6665ZM1.3335 11.3332H4.00016V3.99984H1.3335V11.3332ZM12.0002 3.99984V11.3332H14.6668V3.99984H12.0002Z\" fill=\"#A0A0A0\"/>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst TeamIcon = () => {\r\n  return (\r\n    <svg\r\n          width=\"16\"\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M10.6665 7.3335C11.7698 7.3335 12.6598 6.43683 12.6598 5.3335C12.6598 4.23016 11.7698 3.3335 10.6665 3.3335C9.56317 3.3335 8.6665 4.23016 8.6665 5.3335C8.6665 6.43683 9.56317 7.3335 10.6665 7.3335ZM5.33317 7.3335C6.4365 7.3335 7.3265 6.43683 7.3265 5.3335C7.3265 4.23016 6.4365 3.3335 5.33317 3.3335C4.22984 3.3335 3.33317 4.23016 3.33317 5.3335C3.33317 6.43683 4.22984 7.3335 5.33317 7.3335ZM5.33317 8.66683C3.7765 8.66683 0.666504 9.44683 0.666504 11.0002V12.6668H9.99984V11.0002C9.99984 9.44683 6.88984 8.66683 5.33317 8.66683ZM10.6665 8.66683C10.4732 8.66683 10.2565 8.68016 10.0232 8.7035C10.7965 9.26016 11.3332 10.0102 11.3332 11.0002V12.6668H15.3332V11.0002C15.3332 9.44683 12.2232 8.66683 10.6665 8.66683Z\"\r\n            fill=\"#A0A0A0\"\r\n          />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst AddUserIcon = () => {\r\n  return (\r\n    <svg\r\n          width=\"35\"\r\n          height=\"35\"\r\n          viewBox=\"0 0 38 38\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <circle cx=\"19\" cy=\"19\" r=\"19\" fill=\"#2C3136\" />\r\n          <path\r\n            d=\"M20.9998 18.9998C22.4732 18.9998 23.6665 17.8032 23.6665 16.3332C23.6665 14.8598 22.4732 13.6665 20.9998 13.6665C19.5265 13.6665 18.3332 14.8598 18.3332 16.3332C18.3332 17.8032 19.5265 18.9998 20.9998 18.9998ZM14.9998 17.6665V15.6665H13.6665V17.6665H11.6665V18.9998H13.6665V20.9998H14.9998V18.9998H16.9998V17.6665H14.9998ZM20.9998 20.3332C19.2232 20.3332 15.6665 21.2232 15.6665 22.9998V24.3332H26.3332V22.9998C26.3332 21.2232 22.7765 20.3332 20.9998 20.3332Z\"\r\n            fill=\"#A0A0A0\"\r\n          />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport { LockIcon, BoardIcon, TeamIcon, AddUserIcon };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport { showLeftSideNav } from \"../../redux/index\";\r\n\r\nimport { LockIcon, BoardIcon, TeamIcon, AddUserIcon } from \"../../assets/svg/iconlibrary\";\r\n\r\nimport \"./boardnavbar.css\";\r\n\r\nconst BoardNavBar = ({ boardTitle, toggleLeftSideNav }) => (\r\n  <ScrollContainer\r\n    className=\"scroll-container boardnavbar-scroll-container\"\r\n    horizontal={true}\r\n  >\r\n    <div className=\"boardnavbar\">\r\n      <button\r\n        className=\"boardnavbar-btn\"\r\n        onClick={() => {\r\n          toggleLeftSideNav();\r\n        }}\r\n      >\r\n        <BoardIcon />\r\n        <div className=\"boardnavbar-boardtitle\">{boardTitle}</div>\r\n      </button>\r\n      <button className=\"boardnavbar-btn\">\r\n        <LockIcon />\r\n        <div className=\"boardnavbar-boardtitle\">Private</div>\r\n      </button>\r\n      <button className=\"boardnavbar-btn\">\r\n        <TeamIcon />\r\n        <div className=\"boardnavbar-boardtitle\">Team Name</div>\r\n      </button>\r\n      <button className=\"add-user-icon\">\r\n        <AddUserIcon />\r\n      </button>\r\n    </div>\r\n  </ScrollContainer>\r\n);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boardTitle: state.board.currentBoardTitle,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleLeftSideNav: () => dispatch(showLeftSideNav()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardNavBar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AppBar from \"../../components/appbar/AppBar\";\r\nimport LeftSideNav from \"../../components/sidenav-left/SideNavLeft\";\r\nimport RightSideNav from \"../../components/sidenav-right/SideNavRight\";\r\nimport ColumnHolder from \"../../components/column-holder/ColumnHolder\";\r\nimport Modal from \"../../components/modal/Modal\";\r\nimport BoardNavBar from \"../../components/board-nav-bar/BoardNavBar\";\r\n\r\nimport { fetchBoards } from \"../../redux\";\r\n\r\nimport \"./mainPage.css\";\r\n\r\nclass MainPage extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todopage\">\r\n        <AppBar />\r\n        <BoardNavBar />\r\n        {this.props.leftSideNav ? <LeftSideNav /> : null}\r\n        {this.props.rightSideNav ? <RightSideNav /> : null}\r\n        {this.props.boardId ? (\r\n          <ColumnHolder />\r\n        ) : (\r\n          <div className=\"no-active-board\">\r\n            <div className=\"content\">\r\n              <h2 className=\"content-title\">No board selected</h2>\r\n              <p className=\"content-body\">\r\n                There is currently no active board please create one, or select\r\n                a board from the boards panel.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.props.showModal ? <Modal /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoards: () => dispatch(fetchBoards()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    leftSideNav: state.sideNavLeft.leftSideNav,\r\n    rightSideNav: state.sideNavRight.rightSideNav,\r\n    showModal: state.modal.showModal,\r\n    boardId: state.board.currentBoardId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","export const authenticate = (data, next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"token\", data);\r\n    next();\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { authenticate } from \"../auth\";\r\n\r\nimport \"./signup.css\";\r\n\r\nconst SignUp = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        \"https://intense-garden-79464.herokuapp.com/api/v1/users/signup\",\r\n        {\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        authenticate(response.data.token, () => {\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setIsLoading(false);\r\n          history.push(\"/app\");\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.response.data.message;\r\n        setErrorMessage(errorMsg);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      {!isLoading ? (\r\n        <div className=\"signup-content\">\r\n          <form onSubmit={handleSubmit} className=\"signup-form\">\r\n            <h2 className=\"signup-form-title\">\r\n              {!errorMessage ? \"SIGN UP\" : errorMessage}\r\n            </h2>\r\n            <div className=\"signup-form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"signup-form-input\"\r\n                name=\"name\"\r\n                placeholder=\"Your Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"signup-form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"signup-form-input\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"signup-form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"signup-form-input\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"signup-form-group\">\r\n              <button type=\"submit\" className=\"signup-form-submit\">\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <p className=\"loginhere\">\r\n            Have already an account ?\r\n            <Link to=\"/signin\" className=\"signup-form-login-link\">\r\n              Sign in here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { authenticate } from \"../auth\";\r\n\r\nimport \"./signin.css\";\r\n\r\nconst SignIn = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        \"https://intense-garden-79464.herokuapp.com/api/v1/users/signin\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        authenticate(response.data.token, () => {\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setIsLoading(false);\r\n          history.push(\"/app\");\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.response.data.message;\r\n        setErrorMessage(errorMsg);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in-container\">\r\n      {!isLoading ? (\r\n        <div className=\"sign-in-content\">\r\n          <form onSubmit={handleSubmit} className=\"sign-in-form\">\r\n            <h2 className=\"signup-form-title\">\r\n              {!errorMessage ? \"SIGN IN\" : errorMessage}\r\n            </h2>\r\n            <div className=\"sign-in-form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"sign-in-form-input\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"sign-in-form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"sign-in-form-input\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"sign-in-form-submit-button\">\r\n              Sign in\r\n            </button>\r\n          </form>\r\n          <p className=\"sign-in-here\">\r\n            Don't have an account ?{\" \"}\r\n            <Link to=\"/signup\" className=\"sign-in-link\">\r\n              Signup here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: \"/signin\", state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst RedirectToMainPage = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <Redirect to={{ pathname: \"/app\", state: { from: props.location } }} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default RedirectToMainPage;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Homepage from \"./pages/homePage/HomePage\";\r\nimport MainPage from \"./pages/mainPage/MainPage\";\r\nimport SignUp from \"./components/signup/SignUp\";\r\nimport SignIn from \"./components/signin/SignIn\";\r\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\r\nimport RedirectToMainPage from \"./components/auth/RedirectToMainPage\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <RedirectToMainPage exact path=\"/\" component={Homepage} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n        <Route exact path=\"/signin\" component={SignIn} />\r\n        <PrivateRoute path=\"/app\" exact component={MainPage} />\r\n      </Switch>\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}